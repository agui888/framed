upstream yunlian {
     server 127.0.0.1;
     balancer_by_lua_file "src/balancer.lua";
     keepalive 32;
}

upstream api_prism {
    # server 192.168.0.89:18080 weight=100;
    # server 192.168.0.62:18080 weight=100;
    # server 192.168.0.47:18080 weight=100;
    # server 192.168.0.86:18080 weight=100;
    server apix.applinzi.com:80 weight=100;
    balancer_by_lua_block {
        local balancer = require "ngx.balancer"
        local host = os.getenv('FRAMED_BACKEND_PRISM_HOST') or "123.59.102.48"
        local port = os.getenv('FRAMED_BACKEND_PRISM_PORT') or 13300
        local ok, err = balancer.set_current_peer(host, port)
        if not ok then
            ngx.log(ngx.ERR, "failed to set the current peer: ", err)
            return ngx.exit(500)
        end
    }
    keepalive 10;  # connection pool
}

upstream api_crystal {
    # server 192.168.0.89:18080 weight=100;
    # server 192.168.0.62:18080 weight=100;
    # server 192.168.0.47:18080 weight=100;
    # server 192.168.0.86:18080 weight=100;
    server 123.59.102.48:13300 weight=100;
    balancer_by_lua_block {
        local balancer = require "ngx.balancer"
        local host = os.getenv('FRAMED_BACKEND_CRYSTAL_HOST') or "123.59.102.48"
        local port = os.getenv('FRAMED_BACKEND_CRYSTAL_PORT') or 13300
        local ok, err = balancer.set_current_peer(host, port)
        if not ok then
            ngx.log(ngx.ERR, "failed to set the current peer: ", err)
            return ngx.exit(500)
        end
    }
    keepalive 10;  # connection pool
}
